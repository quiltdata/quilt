# Generated by ariadne-codegen
# Source: queries.graphql

from typing import Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .fragments import InvalidInputSelection, OperationErrorSelection


class AddRoles(BaseModel):
    admin: "AddRolesAdmin"


class AddRolesAdmin(BaseModel):
    user: "AddRolesAdminUser"


class AddRolesAdminUser(BaseModel):
    mutate: Optional["AddRolesAdminUserMutate"]


class AddRolesAdminUserMutate(BaseModel):
    add_roles: Union[
        "AddRolesAdminUserMutateAddRolesUser",
        "AddRolesAdminUserMutateAddRolesInvalidInput",
        "AddRolesAdminUserMutateAddRolesOperationError",
    ] = Field(alias="addRoles", discriminator="typename__")


class AddRolesAdminUserMutateAddRolesUser(BaseModel):
    typename__: Literal["User"] = Field(alias="__typename")


class AddRolesAdminUserMutateAddRolesInvalidInput(InvalidInputSelection):
    typename__: Literal["InvalidInput"] = Field(alias="__typename")


class AddRolesAdminUserMutateAddRolesOperationError(OperationErrorSelection):
    typename__: Literal["OperationError"] = Field(alias="__typename")


AddRoles.model_rebuild()
AddRolesAdmin.model_rebuild()
AddRolesAdminUser.model_rebuild()
AddRolesAdminUserMutate.model_rebuild()
