# Generated by ariadne-codegen
# Source: queries.graphql

from typing import Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .fragments import InvalidInputSelection, OperationErrorSelection


class SetRoles(BaseModel):
    admin: "SetRolesAdmin"


class SetRolesAdmin(BaseModel):
    user: "SetRolesAdminUser"


class SetRolesAdminUser(BaseModel):
    mutate: Optional["SetRolesAdminUserMutate"]


class SetRolesAdminUserMutate(BaseModel):
    set_role: Union[
        "SetRolesAdminUserMutateSetRoleUser",
        "SetRolesAdminUserMutateSetRoleInvalidInput",
        "SetRolesAdminUserMutateSetRoleOperationError",
    ] = Field(alias="setRole", discriminator="typename__")


class SetRolesAdminUserMutateSetRoleUser(BaseModel):
    typename__: Literal["User"] = Field(alias="__typename")


class SetRolesAdminUserMutateSetRoleInvalidInput(InvalidInputSelection):
    typename__: Literal["InvalidInput"] = Field(alias="__typename")


class SetRolesAdminUserMutateSetRoleOperationError(OperationErrorSelection):
    typename__: Literal["OperationError"] = Field(alias="__typename")


SetRoles.model_rebuild()
SetRolesAdmin.model_rebuild()
SetRolesAdminUser.model_rebuild()
SetRolesAdminUserMutate.model_rebuild()
