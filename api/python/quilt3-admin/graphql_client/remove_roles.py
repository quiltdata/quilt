# Generated by ariadne-codegen
# Source: queries.graphql

from typing import Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .fragments import InvalidInputSelection, OperationErrorSelection


class RemoveRoles(BaseModel):
    admin: "RemoveRolesAdmin"


class RemoveRolesAdmin(BaseModel):
    user: "RemoveRolesAdminUser"


class RemoveRolesAdminUser(BaseModel):
    mutate: Optional["RemoveRolesAdminUserMutate"]


class RemoveRolesAdminUserMutate(BaseModel):
    remove_roles: Union[
        "RemoveRolesAdminUserMutateRemoveRolesUser",
        "RemoveRolesAdminUserMutateRemoveRolesInvalidInput",
        "RemoveRolesAdminUserMutateRemoveRolesOperationError",
    ] = Field(alias="removeRoles", discriminator="typename__")


class RemoveRolesAdminUserMutateRemoveRolesUser(BaseModel):
    typename__: Literal["User"] = Field(alias="__typename")


class RemoveRolesAdminUserMutateRemoveRolesInvalidInput(InvalidInputSelection):
    typename__: Literal["InvalidInput"] = Field(alias="__typename")


class RemoveRolesAdminUserMutateRemoveRolesOperationError(OperationErrorSelection):
    typename__: Literal["OperationError"] = Field(alias="__typename")


RemoveRoles.model_rebuild()
RemoveRolesAdmin.model_rebuild()
RemoveRolesAdminUser.model_rebuild()
RemoveRolesAdminUserMutate.model_rebuild()
