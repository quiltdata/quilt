[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "quilt3"
dynamic = ["version"]
description = "Quilt: where data comes together"
readme = "README.md"
requires-python = ">=3.9"
license = "Apache-2.0"
authors = [
    {name = "quiltdata", email = "contact@quiltdata.io"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "platformdirs>=2",
    "boto3>=1.21.7",
    "jsonlines==1.2.0",
    "PyYAML>=5.1",
    "requests>=2.12.4",
    "tenacity>=5.1.1,!=8.4.0",
    "tqdm>=4.32",
    "requests_futures==1.0.0",
    "jsonschema>=3,<5",
    "pydantic>=2.0.0,<3.0.0",
]

[project.optional-dependencies]
pyarrow = [
    "numpy>=1.14.0",
    "pandas>=0.19.2",
    "pyarrow>=0.14.1",
]
anndata = [
    "anndata>=0.8.0",
]
catalog = [
    "quilt3_local>=2,<3",
    "uvicorn>=0.15,<0.18",
    "aiobotocore[boto3]>=2",
]

[project.urls]
Homepage = "https://github.com/quiltdata/quilt"
Repository = "https://github.com/quiltdata/quilt"

[project.scripts]
quilt3 = "quilt3.main:main"

[tool.setuptools]
packages = [
    "quilt3",
    "quilt3.admin",
    "quilt3.admin._graphql_client",
    "quilt3.backends",
    "quilt3.workflows",
]
include-package-data = true

[tool.setuptools.dynamic]
version = {file = "quilt3/VERSION"}

[tool.setuptools.package-data]
quilt3 = ["VERSION", "workflows/config-1.schema.json"]

[dependency-groups]
dev = [
    "pytest==6.*",
    "pytest-cov",
    "coverage==6.4",
    "pytest-env",
    "pytest-subtests",
    "responses",
    "anndata!=0.9.0",
    "numpy>=1.14.0",
    "pandas>=0.19.2",
    "pyarrow>=0.14.1",
    "ruff>=0.12.11",
    "poethepoet>=0.37.0",
]

[tool.ruff]
# Extends from root configuration
extend = "../../ruff.toml"
# Exclude auto-generated files specific to quilt3
extend-exclude = [
    "quilt3/admin/_graphql_client",
]

[tool.poe.tasks]
test = "pytest --disable-warnings"
test-verbose = "pytest -v"
test-coverage = "pytest --cov=quilt3 --cov-report=term-missing"

lint = "ruff check ."
fmt = "ruff format ."
fmt-check = "ruff format --check ."

clean.shell = "rm -rf build dist *.egg-info .pytest_cache .coverage && find . -type d -name __pycache__ -exec rm -rf {} + 2>/dev/null || true"

verify-release-tag.help = "Verify git tag matches package version (for releases)"
verify-release-tag.args = [{name = "tag", positional = true, required = true}]
verify-release-tag.shell = """
version=$(cat quilt3/VERSION)
if [ "$tag" != "$version" ]; then
  echo "Error: Git tag '$tag' does not match version '$version'"
  exit 1
fi
"""
verify-release-tag.verbosity = -1
