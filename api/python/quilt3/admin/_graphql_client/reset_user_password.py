# Generated by ariadne-codegen
# Source: queries.graphql

from typing import Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .fragments import InvalidInputSelection, OperationErrorSelection


class ResetUserPassword(BaseModel):
    admin: "ResetUserPasswordAdmin"


class ResetUserPasswordAdmin(BaseModel):
    user: "ResetUserPasswordAdminUser"


class ResetUserPasswordAdminUser(BaseModel):
    mutate: Optional["ResetUserPasswordAdminUserMutate"]


class ResetUserPasswordAdminUserMutate(BaseModel):
    reset_password: Union[
        "ResetUserPasswordAdminUserMutateResetPasswordOk",
        "ResetUserPasswordAdminUserMutateResetPasswordInvalidInput",
        "ResetUserPasswordAdminUserMutateResetPasswordOperationError",
    ] = Field(alias="resetPassword", discriminator="typename__")


class ResetUserPasswordAdminUserMutateResetPasswordOk(BaseModel):
    typename__: Literal["Ok"] = Field(alias="__typename")


class ResetUserPasswordAdminUserMutateResetPasswordInvalidInput(InvalidInputSelection):
    typename__: Literal["InvalidInput"] = Field(alias="__typename")


class ResetUserPasswordAdminUserMutateResetPasswordOperationError(
    OperationErrorSelection
):
    typename__: Literal["OperationError"] = Field(alias="__typename")


ResetUserPassword.model_rebuild()
ResetUserPasswordAdmin.model_rebuild()
ResetUserPasswordAdminUser.model_rebuild()
ResetUserPasswordAdminUserMutate.model_rebuild()
