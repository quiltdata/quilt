# Generated by ariadne-codegen
# Source: queries.graphql

from typing import Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .fragments import InvalidInputSelection, OperationErrorSelection


class DeleteUser(BaseModel):
    admin: "DeleteUserAdmin"


class DeleteUserAdmin(BaseModel):
    user: "DeleteUserAdminUser"


class DeleteUserAdminUser(BaseModel):
    mutate: Optional["DeleteUserAdminUserMutate"]


class DeleteUserAdminUserMutate(BaseModel):
    delete: Union[
        "DeleteUserAdminUserMutateDeleteOk",
        "DeleteUserAdminUserMutateDeleteInvalidInput",
        "DeleteUserAdminUserMutateDeleteOperationError",
    ] = Field(discriminator="typename__")


class DeleteUserAdminUserMutateDeleteOk(BaseModel):
    typename__: Literal["Ok"] = Field(alias="__typename")


class DeleteUserAdminUserMutateDeleteInvalidInput(InvalidInputSelection):
    typename__: Literal["InvalidInput"] = Field(alias="__typename")


class DeleteUserAdminUserMutateDeleteOperationError(OperationErrorSelection):
    typename__: Literal["OperationError"] = Field(alias="__typename")


DeleteUser.model_rebuild()
DeleteUserAdmin.model_rebuild()
DeleteUserAdminUser.model_rebuild()
DeleteUserAdminUserMutate.model_rebuild()
