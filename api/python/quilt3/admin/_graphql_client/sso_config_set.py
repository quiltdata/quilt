# Generated by ariadne-codegen
# Source: queries.graphql

from typing import Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .fragments import InvalidInputSelection, OperationErrorSelection


class SsoConfigSet(BaseModel):
    admin: "SsoConfigSetAdmin"


class SsoConfigSetAdmin(BaseModel):
    set_sso_config: Union[
        "SsoConfigSetAdminSetSsoConfigOk",
        "SsoConfigSetAdminSetSsoConfigInvalidInput",
        "SsoConfigSetAdminSetSsoConfigOperationError",
    ] = Field(alias="setSsoConfig", discriminator="typename__")


class SsoConfigSetAdminSetSsoConfigOk(BaseModel):
    typename__: Literal["Ok"] = Field(alias="__typename")
    underscore_named_field_: Optional[bool] = Field(alias="_")


class SsoConfigSetAdminSetSsoConfigInvalidInput(InvalidInputSelection):
    typename__: Literal["InvalidInput"] = Field(alias="__typename")


class SsoConfigSetAdminSetSsoConfigOperationError(OperationErrorSelection):
    typename__: Literal["OperationError"] = Field(alias="__typename")


SsoConfigSet.model_rebuild()
SsoConfigSetAdmin.model_rebuild()
