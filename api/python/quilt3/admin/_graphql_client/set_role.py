# Generated by ariadne-codegen
# Source: queries.graphql

from typing import Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .fragments import InvalidInputSelection, OperationErrorSelection, UserSelection


class SetRole(BaseModel):
    admin: "SetRoleAdmin"


class SetRoleAdmin(BaseModel):
    user: "SetRoleAdminUser"


class SetRoleAdminUser(BaseModel):
    mutate: Optional["SetRoleAdminUserMutate"]


class SetRoleAdminUserMutate(BaseModel):
    set_role: Union[
        "SetRoleAdminUserMutateSetRoleUser",
        "SetRoleAdminUserMutateSetRoleInvalidInput",
        "SetRoleAdminUserMutateSetRoleOperationError",
    ] = Field(alias="setRole", discriminator="typename__")


class SetRoleAdminUserMutateSetRoleUser(UserSelection):
    typename__: Literal["User"] = Field(alias="__typename")


class SetRoleAdminUserMutateSetRoleInvalidInput(InvalidInputSelection):
    typename__: Literal["InvalidInput"] = Field(alias="__typename")


class SetRoleAdminUserMutateSetRoleOperationError(OperationErrorSelection):
    typename__: Literal["OperationError"] = Field(alias="__typename")


SetRole.model_rebuild()
SetRoleAdmin.model_rebuild()
SetRoleAdminUser.model_rebuild()
SetRoleAdminUserMutate.model_rebuild()
