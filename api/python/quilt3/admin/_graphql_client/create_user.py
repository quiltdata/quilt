# Generated by ariadne-codegen
# Source: queries.graphql

from typing import Literal, Union

from pydantic import Field

from .base_model import BaseModel
from .fragments import InvalidInputSelection, OperationErrorSelection, UserSelection


class CreateUser(BaseModel):
    admin: "CreateUserAdmin"


class CreateUserAdmin(BaseModel):
    user: "CreateUserAdminUser"


class CreateUserAdminUser(BaseModel):
    create: Union[
        "CreateUserAdminUserCreateUser",
        "CreateUserAdminUserCreateInvalidInput",
        "CreateUserAdminUserCreateOperationError",
    ] = Field(discriminator="typename__")


class CreateUserAdminUserCreateUser(UserSelection):
    typename__: Literal["User"] = Field(alias="__typename")


class CreateUserAdminUserCreateInvalidInput(InvalidInputSelection):
    typename__: Literal["InvalidInput"] = Field(alias="__typename")


class CreateUserAdminUserCreateOperationError(OperationErrorSelection):
    typename__: Literal["OperationError"] = Field(alias="__typename")


CreateUser.model_rebuild()
CreateUserAdmin.model_rebuild()
CreateUserAdminUser.model_rebuild()
