# Generated by ariadne-codegen
# Source: queries.graphql

from typing import Literal, Union

from pydantic import Field

from .base_model import BaseModel
from .fragments import InvalidInputSelection, OperationErrorSelection


class BucketTabulatorTableRename(BaseModel):
    admin: "BucketTabulatorTableRenameAdmin"


class BucketTabulatorTableRenameAdmin(BaseModel):
    bucket_rename_tabulator_table: Union[
        "BucketTabulatorTableRenameAdminBucketRenameTabulatorTableBucketConfig",
        "BucketTabulatorTableRenameAdminBucketRenameTabulatorTableInvalidInput",
        "BucketTabulatorTableRenameAdminBucketRenameTabulatorTableOperationError",
    ] = Field(alias="bucketRenameTabulatorTable", discriminator="typename__")


class BucketTabulatorTableRenameAdminBucketRenameTabulatorTableBucketConfig(BaseModel):
    typename__: Literal["BucketConfig"] = Field(alias="__typename")


class BucketTabulatorTableRenameAdminBucketRenameTabulatorTableInvalidInput(
    InvalidInputSelection
):
    typename__: Literal["InvalidInput"] = Field(alias="__typename")


class BucketTabulatorTableRenameAdminBucketRenameTabulatorTableOperationError(
    OperationErrorSelection
):
    typename__: Literal["OperationError"] = Field(alias="__typename")


BucketTabulatorTableRename.model_rebuild()
BucketTabulatorTableRenameAdmin.model_rebuild()
