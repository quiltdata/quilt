# Generated by ariadne-codegen
# Source: queries.graphql

from typing import Literal, Union

from pydantic import Field

from .base_model import BaseModel
from .fragments import InvalidInputSelection, OperationErrorSelection


class BucketTabulatorTableSet(BaseModel):
    admin: "BucketTabulatorTableSetAdmin"


class BucketTabulatorTableSetAdmin(BaseModel):
    bucket_set_tabulator_table: Union[
        "BucketTabulatorTableSetAdminBucketSetTabulatorTableBucketConfig",
        "BucketTabulatorTableSetAdminBucketSetTabulatorTableInvalidInput",
        "BucketTabulatorTableSetAdminBucketSetTabulatorTableOperationError",
    ] = Field(alias="bucketSetTabulatorTable", discriminator="typename__")


class BucketTabulatorTableSetAdminBucketSetTabulatorTableBucketConfig(BaseModel):
    typename__: Literal["BucketConfig"] = Field(alias="__typename")


class BucketTabulatorTableSetAdminBucketSetTabulatorTableInvalidInput(
    InvalidInputSelection
):
    typename__: Literal["InvalidInput"] = Field(alias="__typename")


class BucketTabulatorTableSetAdminBucketSetTabulatorTableOperationError(
    OperationErrorSelection
):
    typename__: Literal["OperationError"] = Field(alias="__typename")


BucketTabulatorTableSet.model_rebuild()
BucketTabulatorTableSetAdmin.model_rebuild()
