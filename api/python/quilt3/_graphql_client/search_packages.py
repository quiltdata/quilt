# Generated by ariadne-codegen
# Source: queries.graphql

from typing import Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .fragments import InvalidInputSelection, PackagesSearchResultSetSelection


class SearchPackages(BaseModel):
    search_packages: Union[
        "SearchPackagesSearchPackagesPackagesSearchResultSet",
        "SearchPackagesSearchPackagesEmptySearchResultSet",
        "SearchPackagesSearchPackagesInvalidInput",
    ] = Field(alias="searchPackages", discriminator="typename__")


class SearchPackagesSearchPackagesPackagesSearchResultSet(
    PackagesSearchResultSetSelection
):
    typename__: Literal["PackagesSearchResultSet"] = Field(alias="__typename")


class SearchPackagesSearchPackagesEmptySearchResultSet(BaseModel):
    typename__: Literal["EmptySearchResultSet"] = Field(alias="__typename")
    underscore_named_field_: Optional[bool] = Field(alias="_")


class SearchPackagesSearchPackagesInvalidInput(InvalidInputSelection):
    typename__: Literal["InvalidInput"] = Field(alias="__typename")


SearchPackages.model_rebuild()
