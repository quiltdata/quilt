# Generated by ariadne-codegen
# Source: queries.graphql

from typing import Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .fragments import InvalidInputSelection, OperationErrorSelection


class UsersResetPassword(BaseModel):
    admin: "UsersResetPasswordAdmin"


class UsersResetPasswordAdmin(BaseModel):
    user: "UsersResetPasswordAdminUser"


class UsersResetPasswordAdminUser(BaseModel):
    mutate: Optional["UsersResetPasswordAdminUserMutate"]


class UsersResetPasswordAdminUserMutate(BaseModel):
    reset_password: Union[
        "UsersResetPasswordAdminUserMutateResetPasswordOk",
        "UsersResetPasswordAdminUserMutateResetPasswordInvalidInput",
        "UsersResetPasswordAdminUserMutateResetPasswordOperationError",
    ] = Field(alias="resetPassword", discriminator="typename__")


class UsersResetPasswordAdminUserMutateResetPasswordOk(BaseModel):
    typename__: Literal["Ok"] = Field(alias="__typename")


class UsersResetPasswordAdminUserMutateResetPasswordInvalidInput(InvalidInputSelection):
    typename__: Literal["InvalidInput"] = Field(alias="__typename")


class UsersResetPasswordAdminUserMutateResetPasswordOperationError(
    OperationErrorSelection
):
    typename__: Literal["OperationError"] = Field(alias="__typename")


UsersResetPassword.model_rebuild()
UsersResetPasswordAdmin.model_rebuild()
UsersResetPasswordAdminUser.model_rebuild()
UsersResetPasswordAdminUserMutate.model_rebuild()
