user  nginx;
worker_processes  auto;
daemon off;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    charset utf-8;
    client_max_body_size 75M;

    gzip on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript;

    include /etc/nginx/conf.d/*.conf;

    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        if ($http_x_forwarded_proto = 'http') {
            return 400;
        }

        location ~ ^/(?<s3_bucket>[^/]+)(/(?<s3_path>.*))? {
            # Add CORS headers.
            add_header 'Access-Control-Allow-Headers' $http_access_control_request_headers always;
            add_header 'Access-Control-Allow-Methods' $http_access_control_request_method always;
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Max-Age' '3000' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range, x-amz-meta-helium' always;

            # Return success on OPTIONS.
            if ($request_method = 'OPTIONS') {
                return 200;
            }

            # Proxy everything else to S3.
            # Use $request_uri rather than $s3_path because it needs to stay encoded.
            if ($request_uri ~ "^/[^/?]+/?(.*)") {
                proxy_pass 'https://$s3_bucket.s3.amazonaws.com/$1';
            }

            # Remove any existing CORS headers from the response to avoid duplicates.
            proxy_hide_header 'Access-Control-Allow-Headers';
            proxy_hide_header 'Access-Control-Allow-Methods';
            proxy_hide_header 'Access-Control-Allow-Origin';
            proxy_hide_header 'Access-Control-Max-age';
            proxy_hide_header 'Access-Control-Expose-Headers';
        }

        location = / {
            add_header 'Content-Type' 'text/plain';
            return 200 'S3 Proxy';
        }
    }
}
