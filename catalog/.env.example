# Example env file: save as .env (ignored by git) and edit to use.
#
# Syntax reference (from https://github.com/motdotla/dotenv#rules):
#
# The parsing engine currently supports the following rules:
#
# - `BASIC=basic` becomes `{BASIC: 'basic'}`
# - empty lines are skipped
# - lines beginning with `#` are treated as comments
# - empty values become empty strings (`EMPTY=` becomes `{EMPTY: ''}`)
# - single and double quoted values are escaped (`SINGLE_QUOTE='quoted'` becomes `{SINGLE_QUOTE: "quoted"}`)
# - new lines are expanded if in double quotes (`MULTILINE="new\nline"` becomes
# ```
# {MULTILINE: 'new
# line'}
# ```
# - inner quotes are maintained (think JSON) (`JSON={"foo": "bar"}` becomes `{JSON:"{\"foo\": \"bar\"}"`)
# - whitespace is removed from both ends of the value (see more on [`trim`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim)) (`FOO="  some value  "` becomes `{FOO: 'some value'}`)

# Registry (API) url
# ==================

# local registry instance
REGISTRY_URL=http://flask:5000

# staging registry instance
#REGISTRY_URL=https://stage-registry.quiltdata.com

# Team config
# ===========

# when empty, the instance is non-team
TEAM_ID=
TEAM_NAME=

# when set, team features are enabled
#TEAM_ID=supercorp
#TEAM_NAME="SuperCorp (TM)"

# when non-empty, auth-protect all the routes
ALWAYS_REQUIRES_AUTH=

# External services
# =================

# Stripe
STRIPE_KEY=

# Sentry Data Source Name.
# If set, errors and stuff are sent to the Sentry servers
# (see `app/utils/errorReporting.js` for details).
SENTRY_DSN=

# Mixpanel token. If set, navigation is tracked via Mixpanel.
MIXPANEL_TOKEN=
