version: 2.1

orbs:
  win: circleci/windows@2.4.0
  node: circleci/node@4.1.0

# This is used to run the PyPI release job and the jobs it depends on,
# when Git tag for release is created (by default jobs don't run on tags).
release-tags: &release-tags
  tags:
    only: /[0-9]+(\.[0-9]+)*([abrc]+[0-9]+)?$/

executors:
  python-36:
    docker:
      - image: circleci/python:3.6
  python-37:
    docker:
      - image: circleci/python:3.7
  python-38:
    docker:
      - image: circleci/python:3.8
  python: python-36

commands:
  setup-venv:
    description: "Make subsequent steps to run in venv"
    steps:
      - run:
          name: Setup venv
          command: |
            pip install virtualenv==20.0.25
            virtualenv venv
            if [ -e venv/bin/activate ]; then
              echo ". venv/bin/activate" >> $BASH_ENV
            else
              echo ". venv/Scripts/activate" >> $BASH_ENV # for Windows
            fi
  codecov:
    parameters:
      flags:
        type: string
        default: ""
    steps:
      - run:
          name: Upload coverage report
          command: |
            curl --connect-timeout 5 --retry 10 -o codecov-upload.sh https://codecov.io/bash
            bash codecov-upload.sh -n "$CIRCLE_JOB" -F "<< parameters.flags >>" -Z

jobs:
  linter:
    executor: python
    steps:
      - checkout
      - setup-venv
      - run:
          name: Install dependencies
          command: |
            pip install pylint 'pycodestyle>=2.6.0a1'
      - run:
          name: Run pylint
          command: |
            pylint $(find -name '*.py' -not -path './venv/*')
      - run:
          name: Run pycodestyle
          command: |
            pycodestyle $(find -name '*.py' -not -path './venv/*')

  isort:
    executor: python
    steps:
      - checkout
      - setup-venv
      - run:
          name: Install dependencies
          command: |
            pip install isort
      - run:
          name: Run isort
          command: |
            isort --check --diff .

  test-client:
    parameters:
      executor:
        type: executor
    executor: << parameters.executor >>
    environment:
      QUILT_DISABLE_USAGE_METRICS: true
    steps:
      - checkout
      - setup-venv
      - run:
          name: Install dependencies
          command: |
            pip install -e api/python[tests]
      - run:
          name: Run Pytest
          command: |
            pytest --cov=api/python api/python
      - codecov:
          flags: "api-python"

  test-lambda:
    executor: python
    description: "Test lambdas"
    environment:
      QUILT_DISABLE_USAGE_METRICS: true
    parameters:
      path:
        description: "Relative path to lambda root including setup.py, e.g. 'es/indexer' for lambdas/es/indexer"
        type: string
    steps:
      - checkout
      - setup-venv
      - run:
          name: Install dependencies
          command: |
            if [ << parameters.path >> == "shared" ]
              pip install -e lambdas/shared[tests]
            then
              pip install -e lambdas/shared
              pip install -e lambdas/<< parameters.path >>
            fi
            pip install -r lambdas/<< parameters.path >>/requirements.txt -r lambdas/<< parameters.path >>/test-requirements.txt
      - run:
          name: Pytest
          command: |
            pytest --cov=lambdas lambdas/<< parameters.path >>
      - codecov:
          flags: "lambda"

  pypi-release:
    executor: python
    environment:
      QUILT_DISABLE_USAGE_METRICS: true
    steps:
      - checkout
      - setup-venv
      - run:
          name: install python dependencies
          command: |
            pip install -e api/python[tests]
      - run:
          name: verify git tag vs. version
          command: |
            python api/python/setup.py verify
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = quiltdata" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create packages
          command: |
            cd api/python
            python setup.py sdist
            python setup.py bdist_wheel
      - run:
          name: upload to pypi
          command: |
            cd api/python
            pip install twine==3.1.1
            twine upload dist/*

  test-catalog:
    executor:
      name: node/default
      tag: "15.4"
    steps:
      - checkout
      - node/install-packages:
          app-dir: catalog
      - run:
          working_directory: catalog
          command: npm test
      - run:
          working_directory: catalog
          command: npm run build
      - run:
          working_directory: catalog
          command: npm run bundlewatch
      - codecov:
          flags: "catalog"

workflows:
  version: 2
  py-ci:
    jobs:
      - linter
      - isort
      - test-client:
          matrix:
            parameters:
              executor:
                - python-36
                - python-37
                - python-38
          filters:
            <<: *release-tags
      - test-client:
          name: test-client-windows
          executor:
            name: win/default
            shell: bash --login -eo pipefail
          filters:
            <<: *release-tags
      - test-lambda:
          name: test-lambda-<< matrix.path >>
          matrix:
            parameters:
              path:
                - access_counts
                - preview
                - s3select
                - search
                - thumbnail
                - pkgselect
                - shared
      - test-lambda:
          name: test-lambda-indexer
          path: es/indexer
      - pypi-release:
          requires:
            - test-client
            - test-client-windows
          filters:
            <<: *release-tags
            branches:
              ignore: /.*/
  js-ci:
    jobs:
      - test-catalog
