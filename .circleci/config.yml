version: 2.1

orbs:
  win: circleci/windows@2.4.0

commands:
  setup-venv:
    description: "Make subsequent steps to run in venv"
    steps:
      - run:
          name: Setup venv
          command: |
            pip install virtualenv
            virtualenv venv
            if [ -e venv/bin/activate ]; then
              echo ". venv/bin/activate" >> $BASH_ENV
            else
              echo ". venv/Scripts/activate" >> $BASH_ENV # for Windows
            fi

workflows:
  version: 2
  test:
    jobs:
      - linter
      - test-36
      - test-37
      - test-38
      - test-windows
      - test-lambda:
          name: test-lambda-indexer
          path: "es/indexer"
      - test-lambda:
          name: test-lambda-preview
          path: "preview"
      - test-lambda:
          name: test-lambda-s3select
          path: "s3select"
      - test-lambda:
          name: test-lambda-search
          path: "search"
      - test-lambda:
          name: test-lambda-shared
          path: "shared"
          sub-path: "[tests]"
      - test-lambda:
          name: test-lambda-thumbnail
          path: "thumbnail"

  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*([abrc]+[0-9]+)?$/
            branches:
              ignore: /.*/

test-base: &test-base
  environment:
    QUILT_DISABLE_USAGE_METRICS: true
  steps:
    - checkout
    - setup-venv
    - run:
        name: Install dependencies
        command: |
          pip install -e api/python[tests]
    - run:
        name: Run Pytest
        command: |
          cd api/python && pytest --cov=./
          codecov

jobs:
  linter:
    docker:
      - image: circleci/python:3.6-jessie
    steps:
      - checkout
      - setup-venv
      - run:
          name: Install dependencies
          command: |
            pip install pylint 'pycodestyle>=2.6.0a1'
      - run:
          name: Run pylint
          command: |
            pylint $(find -name '*.py' -not -path './venv/*')
      - run:
          name: Run pycodestyle
          command: |
            pycodestyle $(find -name '*.py' -not -path './venv/*')

  test-36:
    docker:
      - image: circleci/python:3.6-jessie
    <<: *test-base

  test-37:
    docker:
      - image: circleci/python:3.7
    <<: *test-base

  test-38:
    docker:
      - image: circleci/python:3.8
    <<: *test-base

  test-windows:
    executor:
      name: win/default
      shell: bash --login -eo pipefail
    <<: *test-base

  test-lambda:
    docker:
      - image: circleci/python:3.6-jessie
    description: "Test lambdas"
    environment:
      QUILT_DISABLE_USAGE_METRICS: true
    parameters:
      path:
        description: "Relative path to lambda root including setup.py, e.g. 'es/indexer' for lambdas/es/indexer"
        type: string
      sub-path:
        description: "sub-path relative to lambda path"
        default: ""
        type: string
    steps:
      - checkout
      - run:
          name: Setup
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install lambdas/shared/<< parameters.sub-path >>
            if [ << parameters.path >> != "shared" ]
            then
              pip install lambdas/<< parameters.path >>
              pip install -r lambdas/<< parameters.path >>/requirements.txt
              pip install -r lambdas/<< parameters.path >>/test-requirements.txt
            fi
      - run:
          name: Pytest
          command: |
            . venv/bin/activate
            cd lambdas/<< parameters.path >> && pytest --cov=./

  build:
    docker:
      - image: circleci/python:3.6-jessie
    environment:
      QUILT_DISABLE_USAGE_METRICS: true
    steps:
      - checkout
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "api/python/setup.py" }}-{{ checksum "Makefile" }}
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -e api/python[tests]
      - save_cache:
          key: v1-dependency-cache-{{ checksum "api/python/setup.py" }}-{{ checksum "Makefile" }}
          paths:
            - "venv"
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            cd api/python && pytest --cov=./
            codecov
      - store_artifacts:
          path: htmlcov/

  deploy:
    docker:
      - image: circleci/python:3.6-jessie
    environment:
      QUILT_DISABLE_USAGE_METRICS: true
    steps:
      - checkout
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "api/python/setup.py" }}-{{ checksum "Makefile" }}
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -e api/python[tests]
      - save_cache:
          key: v1-dependency-cache-{{ checksum "api/python/setup.py" }}-{{ checksum "Makefile" }}
          paths:
            - "venv"
      - run:
          name: verify git tag vs. version
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python api/python/setup.py verify
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = quiltdata" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create packages
          command: |
            cd api/python
            python setup.py sdist
            python setup.py bdist_wheel
      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            cd api/python
            pip install twine
            twine upload dist/*
