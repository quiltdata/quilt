name: Python Autofix

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - '**.py'
      - '.github/workflows/py-autofix.yml'
  workflow_dispatch:

jobs:
  autofix-lint:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request' && 
      !contains(github.event.head_commit.message, '[autofix]')
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          ref: ${{ github.head_ref }}
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install autopep8 'pycodestyle>=2.6.1'
      - name: Configure git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Actions Autofix"
      - name: Run autopep8 fixes
        run: |
          find . -name '*.py' -not -path './venv/*' -not -path './.venv/*' -not -path './env/*' | \
            xargs -r autopep8 --in-place --aggressive --aggressive
      - name: Check for changes
        id: verify-changed-files
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
      - name: Commit and push changes
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          git add .
          git commit -m "[autofix] Apply pycodestyle formatting fixes

          ðŸ¤– Generated with GitHub Actions autofix
          
          Co-Authored-By: GitHub Actions <action@github.com>"
          git push origin ${{ github.head_ref }}

  autofix-isort:
    runs-on: ubuntu-latest
    needs: autofix-lint
    if: |
      github.event_name == 'pull_request' && 
      !contains(github.event.head_commit.message, '[autofix]') &&
      (success() || failure())
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          ref: ${{ github.head_ref }}
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install isort
      - name: Configure git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Actions Autofix"
      - name: Run isort autofix
        run: |
          find . -name '*.py' -not -path './venv/*' -not -path './.venv/*' -not -path './env/*' | \
            xargs -r isort
      - name: Check for changes
        id: verify-changed-files
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
      - name: Commit and push changes
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          git add .
          git commit -m "[autofix] Apply isort import sorting

          ðŸ¤– Generated with GitHub Actions autofix
          
          Co-Authored-By: GitHub Actions <action@github.com>"
          git push origin ${{ github.head_ref }}